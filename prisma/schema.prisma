generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  avatar     String?
  username   String   @unique
  name       String
  email      String   @unique
  password   String
  is_admin   Boolean
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  sessions     Session[]
  accounts     Account[]
  transactions Transaction[] // Relacionamento com Transações

  @@map("users")
}

model Session {
  id            String   @id @default(cuid())
  user_id       String
  expires       DateTime
  session_token String   @unique

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Account {
  id                      String  @id @default(cuid())
  user_id                 String
  provider_type           String
  provider                String
  provider_account_id     String
  refresh_token           String? @db.Text
  access_token            String? @db.Text
  access_token_expires_at Int?
  token_type              String?
  scope                   String?
  id_token                String? @db.Text
  session_state           String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Transaction {
  id        String            @id @default(uuid())
  status    TransactionStatus @default(pending)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum TransactionStatus {
  pending
  completed
  failed
}
